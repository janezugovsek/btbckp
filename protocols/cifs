function DEFAULT_CONFIG
	{
	local conf_name=${1:-"Unknown"}
	echo "
	# Server configuration '$conf_name' for protocol 'cifs'
	# Comments are begins with '#'
	# Coding type is bash

	# Type of protocol (do not change!)
	PROTOCOL=cifs

	# full server address hostname (or IP)
	ADDR=//localhost/share_name

	# connection timeout (seconds)
	TIMEOUT=10
	
	# cifs server username (comment line if is not usable)
	USER=user

	# cifs server username (comment line if is not usable)
	PASSWORD=password

	# cifs server domain (comment line if is not usable)
	DOMAIN=domain

	# directory on server where will be saved backups
	DIR=backup/
	" | sed -e 's/^[ \t]*//'
	}

function CHECK_PROGRAMS
	{
	which mount.cifs &>>/dev/null
	if [ $? != 0 ]; then
		LOG_WARNING "CIFS: Cifs does not exist on computer! (please install: cifs-utils)"
		return 1
	fi
	return 0
	}

function MOUNT
	{
	# check argument parameter
	local server=${1:-`LOG_ERROR "Wrong parameter: server_name" 1>&2; return 2`}
	local directory=${2:-`LOG_ERROR "Wrong parameter: directory" 1>&2; return 2`}

	# set options
	local options=""
	[ "$USER" != "" ] && local options=$options"username=$USER,"
	[ "$PASSWORD" != "" ] && local options=$options"password=$PASSWORD,"
	[ "$DOMAIN" != "" ] && local options=$options"domain=$DOMAIN,"

	# remove last comma
	[ "$options" != "" ] && local options="-o "$options
	options=$(echo $options | sed 's/,$//g')

	# umount location (just in case)
	umount "$directory" &>> /dev/null

	timeout $TIMEOUT mount -t cifs $options "$ADDR" "$directory" &>>/dev/null
	if [ $? != 0 ]; then
		umount "$directory" &>> /dev/null
		LOG_ERROR "CIFS: Can not connect to server '"$(basename "$server" | sed 's/\.conf//g')"'"
		unset USER ADDR PASSWORD DOMAIN
		return 1
	fi
	unset USER ADDR PASSWORD DOMAIN

	MOUNTPOINT="$directory"
	MOUNTPATH="$directory"/$DIR
	mkdir -p $MOUNTPATH 2>>/dev/null
	if [ $? != 0 ]; then
		LOG_ERROR "CIFS: Can not create directory '$MOUNTPATH'"
		return 1
	fi

	LOG_INFO "CIFS: Connect with server '"$(basename "$server" | sed 's/\.conf//g')"'"

	return 0
	}

function UMOUNT
	{
	# check argument parameter
	local server=${1:-`LOG_ERROR "Wrong parameter: server_name" 1>&2; return 2`}
	local directory=${2:-`LOG_ERROR "Wrong parameter: directory" 1>&2; return 2`}

	umount "$directory" &>>/dev/null

	LOG_INFO "CIFS: Unconnect with server '"$(basename "$server" | sed 's/\.conf//g')"'"

	return 0
	}

function MOUNT_CHECK
	{
	local directory=$(realpath "$MOUNTPOINT" 2>>/dev/null)
	if [ "$?" != 0 ]; then
		LOG_ERROR "CIFS: Directory is not mounted"
		return 1
	fi
	mount | grep "$directory" &>>/dev/null
	[ "$?" == "0" ] && return 0
	LOG_ERROR "CIFS: Directory '$directory' is not mounted"
	return 1
	}
